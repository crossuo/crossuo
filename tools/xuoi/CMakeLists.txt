set(PROJECT_NAME xuoi)
project(${PROJECT_NAME})

if(NOT XUO_WINDOWS)
    set(CURL_PROJECT curl-7.50.1)
    set(CURL_ARGS ${EXTERNALS_CMAKE_ARGS} -DBUILD_TESTING=Off -DBUILD_CURL_EXE=Off -DBUILD_SHARED_LIBS=Off -DENABLE_ARES=Off -DCURL_STATICLIB=On)
    ExternalProject_Add(${CURL_PROJECT}
      GIT_REPOSITORY https://github.com/curl/curl.git
      GIT_TAG curl-7_50_1
        PREFIX ${CMAKE_CURRENT_BINARY_DIR}/curl
      CMAKE_ARGS 
        -DCMAKE_INSTALL_PREFIX:PATH=${CMAKE_CURRENT_BINARY_DIR}/curl
        ${CURL_ARGS}
    )
    set(CURL_LIBRARIES curl)
endif()

set(CURL_INCLUDE "${CMAKE_CURRENT_BINARY_DIR}/curl/include" CACHE INTERNAL "")

set(XUOI_PROJECT "${PROJECT_NAME}" CACHE INTERNAL "")
set(XUOI_DIR "${PROJECT_SOURCE_DIR}" CACHE INTERNAL "")
set(XUOI_INCLUDE "${XUOI_DIR}" CACHE INTERNAL "")
set(XUOI_LIBS "${PROJECT_NAME} ${THREAD} ${LOADER}" CACHE INTERNAL "")

set(XUOI_SRCS
  common.cpp
  http.cpp
  xuo_updater.cpp
  main.cpp
)

add_executable(${PROJECT_NAME} ${XUOI_SRCS})
add_dependencies(${PROJECT_NAME} ${EXTERNAL_PROJECT} ${CURL_PROJECT})

target_link_libraries(${PROJECT_NAME} PUBLIC ${CURL_LIBRARIES} ${EXTERNAL_PROJECT} ${LOADER} ${THREAD})
target_include_directories(${PROJECT_NAME} PUBLIC ${EXTERNAL_INCLUDE} ${CURL_INCLUDE})

#
# Launcher
#
set(XUOL_SRCS
  common.cpp
  http.cpp
  xuo_updater.cpp
  xuolauncher.cpp
)

set(XUOL_PROJECT xuolauncher)

add_executable(${XUOL_PROJECT} ${XUOL_SRCS})
add_dependencies(${XUOL_PROJECT} ${EXTERNAL_PROJECT} ${EXTERNALGFX_PROJECT} ${CURL_PROJECT})

target_link_libraries(${XUOL_PROJECT} PUBLIC ${CURL_LIBRARIES} ${EXTERNAL_PROJECT} ${EXTERNALGFX_PROJECT} ${LOADER} ${THREAD})
target_include_directories(${XUOL_PROJECT} PUBLIC ${EXTERNAL_INCLUDE} ${EXTERNALGFX_INCLUDE} ${CURL_INCLUDE})
